Манипулироваение отображенияями
Отображение представляет собой объект сохраняющий связь между
ключами и значениями в виде пар "ключ-значение". По заданному ключу
можно найти его значение. Ключи могут быть однозначными, а значение
дублируемыми. В одних реализация отображения пустые ключи и пустые
значения допускается, а в других нет.
Они не реализует интерфейс iterable. Это означает что перебрать
содержимое отображения организовав цикл foreach не удастся.
Более того невозможно получить итератор. Но можно получить
представление отображения в виде коллекции которая допускает
перебор содержимого в виде цикла или с помощью итератора.

Интерфейс Map
Интерфейс Map отображает однозначные ключи на значение.
Ключ- это объект, используемый для последующего извлечения
данных. задавая ключ и значение, можно размещать значение в
отображение, представленным объектом типа Map. Сохранив
значение по ключу, можно получить его обратно по этому же ключу.
Манипулирование отображеними опирается на 2 основные операции
выполняемые методами get() и put(). Чтобы ввести значение в отображения
следует вызвать метод put() указав ключ и значение, а для того чтобы
получить значение из отображения вызвать метод get(), передав ему ключ
в качесиве аргумента. По этому ключу будет возвращено связанное с ним
значение.
Отображение не реализует интерфейс Collection, хотя является частью
коркаса коллекций.  Тем немение можно получить представление отображения
в виде коллекции. Для этого нужно воспользоваться методом
- entrySet(), возвращающим множество содержащее элементы отображения.
 Чтобы получить  представление ключей в отображении в виде коллекции , следует
 вызвать метод keySet(), а для получения представлений в виде коллекции - метод values().
Метод of() возвращает неизменямое отображение на основе значений, составленное
из переданных аргументов. Основное значение метода of() -  представить удобный,
эффективный способ для создания небольшой коллекции типа Map. Существует 11
перегружаемых методов.

Интерфейс SortedMap
Этот интерфейс расширяет интерфейс Map. Он обеспечивает размещение записей
в отображении по порядку нарастания ключей.
Отсортированные отображения обеспечивают очень эффективное манипулироание
подмножествами отображений. Для получения подотобржений служат методы
headMap(), tailMap(), subMup(). Данные подмножества поддерживаются вызыва -
ющим отображением. При изменении одного изменяется другое, а для получения
первого ключа из подмножества отображения следует вызвать метод firstKey(), а для
получения последнего ключа - метод lastKey();

Интерфейс Map.Entry
Этот интерфейс позволяет обращаться с отдельными записями отображения. Напомним,
что метод entrySet(),  объявляемый в интерфейсе Map , возвращает множество типа Set,
содержащее записи из отображения. Каждый элемент этого множества представляет
собой объект типа Map.Entry.

Класс LinkedHashMap
Класс LinkedHashMap расширяет класс HashMap он создаёт связанный
список элементов, располагаемых отображение в том порядке в котором
они вводились в него. Это позволяет организовать итерацию элементов в
отображение в определённом порядке. Следовательно, при итерации
представления отображения типа LinkedHashMap в виде коллекции его
элементы будут возвращаться в том порядке в котором они вводились в
него. К Можно также создать отображение типа LinkedHashMap, возвра-
щающая свои элементы в том порядке в котором к ним осуществлялся
доступ в последний раз.
