Манипулироваение отображенияями
Отображение представляет собой объект сохраняющий связь между
ключами и значениями в виде пар "ключ-значение". По заданному ключу
можно найти его значение. Ключи могут быть однозначными, а значение
дублируемыми. В одних реализация отображения пустые ключи и пустые
значения допускается, а в других нет.
Они не реализует интерфейс iterable. Это означает что перебрать
содержимое отображения организовав цикл foreach не удастся.
Более того невозможно получить итератор. Но можно получить
представление отображения в виде коллекции которая допускает
перебор содержимого в виде цикла или с помощью итератора.

Интерфейс Map
Интерфейс Map отображает однозначные ключи назначение.
Ключ- это объект, используемый для последующего извлечения
данных. задавая ключ и значение, можно размещать значение в
отображение, представленным объектом типа Map. Сохранить
значение по ключу, я можно получить его обратно поэтому же ключу.
Манипулирование отображеними опирается на 2 основные операции
выполняемые методами get() и put(). Чтобы ввести значение в отображения
следует вызвать метод put() указав ключ и значение, а для того чтобы
получить значение из отображения вызвать метод get(), передав ему ключ
в качесиве аргумента. По этому ключу будет возвращено связанное с ним
значение.
Отображение не реализует интерфейс Collection, хотя является частью
коркаса коллекций.  Тем немение можно получить представление отображения
в виде коллекции. Для этого нужно воспользоваться методом
- entrySet(), возвращающим множество содержащее элементы отображения.
 Чтобы получить  представление ключей в отображении вв виде коллекции , следует вызвать метод keySet(),
а для получения представлений в виде коллекции - метод values().
Метод of() возвращает неизменемое отображение на основе значений, составленное
из переданных аргументов. Основное значение метода of() -  представить удобный,
эффективный способ для создания небольшой коллекции типа Map. Существует 11
перегружаемых методов.

Интерфейс SortedMap
Этот интерфейс расширяет интерфейс Map. Он обеспечивает размещение записей
в отображении по порядку нарастания ключей.
Отсортированные отображения обеспечивают очень эффективное манипулироание
подмножествами отображений. Для получения подотобржений служат методы
headMap(), tailMap(), subMup(). Данные подмножества поддерживаются вызыва -
ющим отображением. При изменении одного, вызывается другое. А для получения
первого ключа из подмножества отображения следует вызвать метод firstKey(), а для
получения последнего ключа - метод lastKey();